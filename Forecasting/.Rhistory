# Remove rows with NA values
plot_data <- data %>%
filter(!is.na(UNRATE), !is.na(CPIAUCSL_yoy))
# Plot the Phillips Curve
p <- ggplot(plot_data, aes(x = UNRATE, y = CPIAUCSL_yoy, color = as.factor(Decade))) +
geom_point(alpha = 0.6) +
geom_smooth(aes(group = as.factor(Decade)), method = "lm", se = FALSE) +
labs(
title = "Interactive Phillips Curve: Inflation vs. Unemployment by Decade",
x = "Unemployment Rate (%)",
y = "Inflation Rate (YoY % Change)",
color = "Decade"
) +
theme_minimal()
# Convert to an interactive plotly object
ggplotly(p)
#| message: false
#| warning: false
#| echo: false
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
# Ensure data is sorted and calculate CPIAUCSL_yoy if needed
data <- data %>%
arrange(sasdate) %>%
mutate(
CPIAUCSL_yoy = (CPIAUCSL / lag(CPIAUCSL, 4) - 1) * 100,
Decade = floor(year(sasdate) / 10) * 10
)
# Remove rows with NA values
plot_data <- data %>%
filter(!is.na(UNRATE), !is.na(CPIAUCSL_yoy))
# Plot the Phillips Curve
p <- ggplot(plot_data, aes(x = UNRATE, y = CPIAUCSL_yoy, color = as.factor(Decade))) +
geom_point(alpha = 0.6) +
geom_smooth(aes(group = as.factor(Decade)), method = "lm", se = FALSE) +
labs(
title = "Interactive Phillips Curve: Inflation vs. Unemployment by Decade",
x = "Unemployment Rate (%)",
y = "Inflation Rate (YoY % Change)",
color = "Decade"
) +
theme_minimal()
# Convert to an interactive plotly object
ggplotly(p)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
library(dplyr)
pwd()
printwd()
data <- read.csv("quartly.csv")
print(names(data))
View(data)
print(names(data))
library(mFilter)
install.packages("mFilter")
library(mFilter)
nrou <- hp_filter$trend
hp_filter <- hpfilter(data$UNRATE, freq = 1600) # Use freq = 1600 for quarterly data
nrou <- hp_filter$trend
data <- read.csv("quartly.csv")
hp_filter <- hpfilter(data$UNRATE, freq = 1600) # Use freq = 1600 for quarterly data
data$nrou <- hp_filter$trend
nrou_plot <- ggplot(data, aes(x = sasdate, y = NROU)) +
geom_line(color = "blue", size = 1) + # Line plot for NROU
labs(
title = "Natural Rate of Unemployment (NROU) Over Time",
x = "Date",
y = "NROU (%)"
) +
theme_minimal() + # Clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"), # Center the title
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
# Display the plot
print(nrou_plot)
nrou_plot <- ggplot(data, aes(x = sasdate, y = NROU)) +
geom_line(color = "blue", linewidth = 1) + # Line plot for NROU
labs(
title = "Natural Rate of Unemployment (NROU) Over Time",
x = "Date",
y = "NROU (%)"
) +
theme_minimal() + # Clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"), # Center the title
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
# Display the plot
print(nrou_plot)
nrou_plot <- ggplot(data, aes(x = data$sasdate, y = data$NROU)) +
geom_line(color = "blue", linewidth = 1) + # Line plot for NROU
labs(
title = "Natural Rate of Unemployment (NROU) Over Time",
x = "Date",
y = "NROU (%)"
) +
theme_minimal() + # Clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"), # Center the title
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
# Display the plot
print(nrou_plot)
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") + # Line plot for NROU
labs(
title = "Natural Rate of Unemployment (NROU) Over Time",
x = "Date",
y = "NROU (%)"
) +
theme_minimal() + # Clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"), # Center the title
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
data <- read.csv("quartly.csv")
hp_filter <- hpfilter(data$UNRATE, freq = 1600) # Use freq = 1600 for quarterly data
data$NROU <- hp_filter$trend
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") + # Line plot for NROU
labs(
title = "Natural Rate of Unemployment (NROU) Over Time",
x = "Date",
y = "NROU (%)"
) +
theme_minimal() + # Clean theme
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"), # Center the title
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)
)
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
View(data)
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU[,1], color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
data <- read.csv("quartly.csv")
hp_filter <- hpfilter(data$UNRATE, freq = 1600) # Use freq = 1600 for quarterly data
data$NROU <- as.vector(hp_filter$trend)
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
nrou <- read.csv("NROU.csv")
nrou <- read.csv("NROU.csv")
View(nrou)
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
View(data)
# Remove the 'factors' and 'transform' rows
nrou <- nrou %>%
# Remove the first two rows
rename(sasdate = observation_date) %>%                      # Rename DATE column to 'sasdate' for consistency
mutate(sasdate = as.Date(sasdate, format = "%m/%d/%Y")) %>%  # Convert to Date format
select(sasdate, NROU)                           # Retain only 'sasdate' and 'NROU'
# Step 3: Merge the two datasets by 'sasdate'
merged_data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)                                # Ensure the data is sorted by date
# Step 4: Optional - View a summary of the merged data
head(merged_data)
data <- read.csv("quartly.csv")
nrou <- read.csv("NROU.csv")
# Step 2: Ensure 'data' is clean (your earlier steps)
data <- data %>%
slice(-c(1, 2)) %>%                             # Remove the first two rows
mutate(sasdate = as.Date(sasdate, format = "%m/%d/%Y")) %>%  # Convert 'sasdate' to Date
select(sasdate, CPIAUCSL, UNRATE)               # Retain only needed columns
data <- read.csv("quartly.csv")
nrou <- read.csv("NROU.csv")
# Step 2: Ensure 'data' is clean (your earlier steps)
data <- data %>%
slice(-c(1, 2)) %>%                             # Remove the first two rows
mutate(sasdate = as.Date(sasdate, format = "%d/%m/%Y")) %>%  # Convert 'sasdate' to Date
select(sasdate, CPIAUCSL, UNRATE)               # Retain only needed columns
# Remove the 'factors' and 'transform' rows
nrou <- nrou %>%
# Remove the first two rows
rename(sasdate = observation_date) %>%                      # Rename DATE column to 'sasdate' for consistency
mutate(sasdate = as.Date(sasdate, format = "%d/%m/%Y")) %>%  # Convert to Date format
select(sasdate, NROU)                           # Retain only 'sasdate' and 'NROU'
View(nrou)
data <- read.csv("quartly.csv")
nrou <- read.csv("NROU")
nrou <- read.csv("NROU.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
nrou$observation_date <as.Date(nrou$observation_date, format  = "%m/%d/%Y")
View(nrou)
nrou$observation_date <- as.Date(nrou$observation_date, format  = "%m/%d/%Y")
View(nrou)
rm(nrou)
nrou <- read.csv("NROU.csv")
View(nrou)
View(data)
nrou$observation_date <- as.Date(nrou$observation_date, format  = "%Y/%m/%d")
rm(nrou)
nrou <- read.csv("NROU.csv")
nrou$observation_date <- as.Date(nrou$observation_date)
# Load necessary library
library(lubridate)
# Shift the dates in 'data' back by one month
data$sasdate <- data$sasdate %m-% months(1)
# Verify the adjusted dates
head(data$sasdate)
rm(data)
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
nrou <- nrou %>%
rename(sasdate = observation_date)
# Shift the dates in 'data' back by one month
nrou$sasdate <- nrou$sasdate %m-% months(1)
# Verify the adjusted dates
head(data$sasdate)
#merging the data frames
merged_data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
View(merged_data)
merged_data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
merged_data <- merged_data %>%
drop_na()
library(tidyr)
merged_data <- merged_data %>%
drop_na()
spf <- read_excel("Inflation.xlsx")
library(readxl)
install.packages("readxl")
library(readxl)
spf <- read_excel("Inflation.xlsx")
View(spf)
View(merged_data)
spf <- spf %>%
mutate(sasdate = case_when(
QUARTER == 1 ~ paste0(YEAR, "-03-01"),
QUARTER == 2 ~ paste0(YEAR, "-06-01"),
QUARTER == 3 ~ paste0(YEAR, "-09-01"),
QUARTER == 4 ~ paste0(YEAR, "-12-01"),
TRUE ~ NA_character_  # Handle unexpected cases
))
spf$sasdate <- as.Date(spf$sasdate)
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
#remove all non relevant data
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
nrou <- read.csv("NROU.csv")
#set date and rename
nrou$observation_date <- as.Date(nrou$observation_date)
nrou <- nrou %>%
rename(sasdate = observation_date)
# Shift the dates in 'data' back by one month to align observations
nrou$sasdate <- nrou$sasdate %m-% months(1)
spf <- read_excel("Inflation.xlsx")
spf <- spf %>%
mutate(sasdate = case_when(
QUARTER == 1 ~ paste0(YEAR, "-03-01"),
QUARTER == 2 ~ paste0(YEAR, "-06-01"),
QUARTER == 3 ~ paste0(YEAR, "-09-01"),
QUARTER == 4 ~ paste0(YEAR, "-12-01"),
TRUE ~ NA_character_  # Handle unexpected cases
))
spf$sasdate <- as.Date(spf$sasdate)
View(spf)
spf <- spf %>%
select(sasdate, INFPGDP1YR, INFCPI1YR, INFCPI10YR, sasdate)
merged_data <- full_join(data, nrou, spf, by = "sasdate") %>%
arrange(sasdate)
View(merged_data)
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
#remove all non relevant data
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
nrou <- read.csv("NROU.csv")
#set date and rename
nrou$observation_date <- as.Date(nrou$observation_date)
nrou <- nrou %>%
rename(sasdate = observation_date)
# Shift the dates in 'data' back by one month to align observations
nrou$sasdate <- nrou$sasdate %m-% months(1)
spf <- read_excel("Inflation.xlsx")
spf <- spf %>%
mutate(sasdate = case_when(
QUARTER == 1 ~ paste0(YEAR, "-03-01"),
QUARTER == 2 ~ paste0(YEAR, "-06-01"),
QUARTER == 3 ~ paste0(YEAR, "-09-01"),
QUARTER == 4 ~ paste0(YEAR, "-12-01"),
TRUE ~ NA_character_  # Handle unexpected cases
))
spf$sasdate <- as.Date(spf$sasdate)
spf <- spf %>%
select(sasdate, INFPGDP1YR, INFCPI1YR, INFCPI10YR, sasdate)
merged_data <- full_join(data, nrou, spf, by = "sasdate") %>%
arrange(sasdate)
merged_data <- full_join(merged_data, spf, by = "sasdate") %>%
arrange(sasdate)
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
#remove all non relevant data
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
nrou <- read.csv("NROU.csv")
#set date and rename
nrou$observation_date <- as.Date(nrou$observation_date)
nrou <- nrou %>%
rename(sasdate = observation_date)
# Shift the dates in 'data' back by one month to align observations
nrou$sasdate <- nrou$sasdate %m-% months(1)
spf <- read_excel("Inflation.xlsx")
spf <- spf %>%
mutate(sasdate = case_when(
QUARTER == 1 ~ paste0(YEAR, "-03-01"),
QUARTER == 2 ~ paste0(YEAR, "-06-01"),
QUARTER == 3 ~ paste0(YEAR, "-09-01"),
QUARTER == 4 ~ paste0(YEAR, "-12-01"),
TRUE ~ NA_character_  # Handle unexpected cases
))
spf$sasdate <- as.Date(spf$sasdate)
spf <- spf %>%
select(sasdate, INFPGDP1YR, INFCPI1YR, INFCPI10YR, sasdate)
#merging the data frames and remove na values
data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
data <- full_join(data, spf, by = "sasdate") %>%
arrange(sasdate)
#merged_data <- merged_data %>%
#drop_na()
ggplot(data, aes(x = sasdate)) +
geom_line(y= NROU, color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
ggplot(data, aes(x = sasdate)) +
geom_line(y = data$NROU, color = "blue") +
labs(title = "Monetary Aggregates Over Time",
x = "Date",
y = "Real Money Stock",
color = "Variable") +
theme_minimal()
spf[spf == "#N/A"] <- NA
spf[spf == "#N/A"] <- NA
View(spf)
spf <- spf %>%
mutate(across(where(is.character), ~ na_if(., "#N/A")))
#merging the data frames and remove na values
rm(data)
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
#remove all non relevant data
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
#merging the data frames and remove na values
data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
data <- full_join(data, spf, by = "sasdate") %>%
arrange(sasdate)
#merged_data <- merged_data %>%
#drop_na()
View(data)
library(haven)
write_dta(data, "metricsProj.dta")
merged_data <- merged_data %>%
drop_na()
data <- data %>%
drop_na()
write_dta(data, "metricsProjNoNA.dta")
data$CPIAUCSL_yoy = (data$CPIAUCSL / lag(data$CPIAUCSL, 4) - 1) * 100,
data$CPIAUCSL_yoy = (data$CPIAUCSL / lag(data$CPIAUCSL, 4) - 1) * 100
nrou <- read.csv("NROU.csv")
#set date and rename
nrou$observation_date <- as.Date(nrou$observation_date)
nrou <- nrou %>%
rename(sasdate = observation_date)
# Shift the dates in 'data' back by one month to align observations
nrou$sasdate <- nrou$sasdate %m-% months(1)
spf <- read_excel("Inflation.xlsx")
spf <- spf %>%
mutate(sasdate = case_when(
QUARTER == 1 ~ paste0(YEAR, "-03-01"),
QUARTER == 2 ~ paste0(YEAR, "-06-01"),
QUARTER == 3 ~ paste0(YEAR, "-09-01"),
QUARTER == 4 ~ paste0(YEAR, "-12-01"),
TRUE ~ NA_character_  # Handle unexpected cases
))
spf$sasdate <- as.Date(spf$sasdate)
spf <- spf %>%
select(sasdate, INFPGDP1YR, INFCPI1YR, INFCPI10YR, sasdate)
spf <- spf %>%
mutate(across(where(is.character), ~ na_if(., "#N/A")))
#merging the data frames and remove na values
data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
#remove all non relevant data
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
data$CPIAUCSL_yoy <- (data$CPIAUCSL / lag(data$CPIAUCSL, 4) - 1) * 100
data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
data <- full_join(data, spf, by = "sasdate") %>%
arrange(sasdate)
data <- data %>%
drop_na()
write_dta(data, "metricsProjNoNA.dta")
write_dta(data, "metricsProj.dta")
data <- read.csv("quartly.csv")
# Remove the 'factors' and 'transform' rows
data <- data[-c(1, 2), ]
# Convert 'sasdate' to Date format
data$sasdate <- as.Date(data$sasdate, format = "%m/%d/%Y")
#remove all non relevant data
data <- data %>%
select(sasdate, CPIAUCSL, UNRATE)
data$CPIAUCSL_yoy <- (data$CPIAUCSL / lag(data$CPIAUCSL, 4) - 1) * 100
nrou <- read.csv("NROU.csv")
#set date and rename
nrou$observation_date <- as.Date(nrou$observation_date)
nrou <- nrou %>%
rename(sasdate = observation_date)
# Shift the dates in 'data' back by one month to align observations
nrou$sasdate <- nrou$sasdate %m-% months(1)
spf <- read_excel("Inflation.xlsx")
spf <- spf %>%
mutate(sasdate = case_when(
QUARTER == 1 ~ paste0(YEAR, "-03-01"),
QUARTER == 2 ~ paste0(YEAR, "-06-01"),
QUARTER == 3 ~ paste0(YEAR, "-09-01"),
QUARTER == 4 ~ paste0(YEAR, "-12-01"),
TRUE ~ NA_character_  # Handle unexpected cases
))
spf$sasdate <- as.Date(spf$sasdate)
spf <- spf %>%
select(sasdate, INFPGDP1YR, INFCPI1YR, INFCPI10YR, sasdate)
spf <- spf %>%
mutate(across(where(is.character), ~ na_if(., "#N/A")))
#merging the data frames and remove na values
data <- full_join(data, nrou, by = "sasdate") %>%
arrange(sasdate)
data <- full_join(data, spf, by = "sasdate") %>%
arrange(sasdate)
#data <- data %>%
#drop_na()
write_dta(data, "metricsProj.dta")
